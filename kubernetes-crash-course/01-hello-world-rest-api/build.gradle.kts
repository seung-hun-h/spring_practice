/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    java
    id("org.springframework.boot") version "3.0.4"
    id("io.spring.dependency-management") version "1.0.11.RELEASE"
    id("com.palantir.docker") version "0.35.0"
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-devtools")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")

}

group = "com.in28minutes.rest.webservices"
version = "0.0.4-SNAPSHOT"
description = "hello-world-rest-api"
java.sourceCompatibility = JavaVersion.VERSION_17

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}

tasks.withType<Jar> {
    manifest {
        attributes["Implementation-Title"] = "hello-world-rest-api"
        attributes["Implementation-Version"] = version
    }
}

tasks.named("jar").configure {
    enabled = false
}


val dockerImageName = name // 변경해야 하는 부분
val dockerImageTag = "latest" // 변경해야 하는 부분

val bootJar = tasks.named("bootJar").get()
docker {
    name = "$group.$dockerImageName:$dockerImageTag"
    dependsOn(bootJar)
    files(bootJar.outputs.files.singleFile)
    buildArgs(mapOf("JAR_FILE" to "${bootJar.outputs.files.singleFile}"))
}

tasks.getByName("dockerPrepare", Copy::class) {
    dependsOn(bootJar)
    from(bootJar.outputs.files.singleFile)
    into("build/docker")
    duplicatesStrategy = DuplicatesStrategy.WARN
}
